name: taxonomy-version-check

env:
  ISSUE_TITLE: 'eBird taxonomy has updated'
  ISSUE_BODY: |
    This issue has been opened by the GitHub Action workflow `taxonomy-version-check`.

    There is an update to the eBird taxonomy. The `rebird::tax` dataset and documentation needs to be updated.

on:
  workflow_call:

jobs:
  taxonomy-version-check-job:
    outputs:
      check-failed: ${{ steps.check-taxonomy-version.outputs.failed }}
    runs-on: ubuntu-latest
    steps:
      - name: check-taxonomy-version-step
        id: check-taxonomy-version
        run: |
          Rscript -e "testthat::test_file('tests/testthat/test-data.R', load_package = 'source', stop_on_failure = TRUE)" && echo "failed=false" >> "$GITHUB_OUTPUT" || echo "failed=true" >> "$GITHUB_OUTPUT" 

  check-and-create-issue-job:
    needs: taxonomy-version-check-job
    if: needs.taxonomy-version-check-job.outputs.check-failed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: check-issue-step
        id: check-issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueTitle = process.env.ISSUE_TITLE;
            const { owner, repo } = context.repo;

            const issues = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'open',
            });

            const existingIssue = issues.data.find(issue => issue.title === issueTitle);

            if (existingIssue) {
              core.setOutput('exists', 'true');
            } else {
              core.setOutput('exists', 'false');
            }

      - name: create-issue-step
        if: ${{ steps.check-issue.outputs.exists == 'false' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueTitle = process.env.ISSUE_TITLE;
            const issueBody = process.env.ISSUE_BODY;
            const { owner, repo } = context.repo;

            await github.rest.issues.create({
              owner,
              repo,
              title: issueTitle,
              body: issueBody,
            });
